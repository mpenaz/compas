{
  "swagger": "2.0",
  "info": {
    "description": "Goal tracking system server",
    "version": "1.0.0",
    "title": "Goal Tracking System",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "basePath": "/v1",
  "tags": [
    {
      "name": "plan",
      "description": "Everything about your Plans"
    },
    {
      "name": "goal",
      "description": "Everything about your goals"
    },
    {
      "name": "evaluation",
      "description": "Everything about your evaluations"
    },
    {
      "name": "user",
      "description": "Operations about user"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/plans": {
      "get": {
        "tags": [
          "plan"
        ],
        "summary": "Find plans by userId",
        "description": "",
        "operationId": "findPlan",
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Plan"
              }
            }
          },
          "404": {
            "description": "Plan not found"
          }
        }
      },
      "post": {
        "tags": [
          "plan"
        ],
        "summary": "Add a new plan",
        "description": "",
        "operationId": "addPlan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Plan object that we want to persist",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Plan"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/plans/{planId}": {
      "delete": {
        "tags": [
          "plan"
        ],
        "summary": "Deletes a plan",
        "description": "",
        "operationId": "deletePlan",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "planId",
            "in": "path",
            "description": "Plan id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Plan not found"
          }
        }
      },
      "put": {
        "tags": [
          "plan"
        ],
        "summary": "Update an existing plan",
        "description": "",
        "operationId": "updatePlan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Plan object that needs to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Plan"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Plan not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/goals": {
      "get": {
        "tags": [
          "goal"
        ],
        "summary": "Find goals by userId",
        "description": "",
        "operationId": "findGoal",
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Goal"
              }
            }
          },
          "404": {
            "description": "Goal not found"
          }
        }
      },
      "post": {
        "tags": [
          "goal"
        ],
        "summary": "Add a new goal",
        "description": "",
        "operationId": "addGoal",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Goal object that needs to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Goal"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/goals/{goalId}": {
      "delete": {
        "tags": [
          "goal"
        ],
        "summary": "Deletes a plan",
        "description": "",
        "operationId": "deleteGoal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "goalId",
            "in": "path",
            "description": "Plan id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Goal not found"
          }
        }
      },
      "put": {
        "tags": [
          "goal"
        ],
        "summary": "Update an existing goal",
        "description": "",
        "operationId": "updateGoal",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Goal object that needs to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Goal"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Goal not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#definitions/CreateUser"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Find users by managerId",
        "description": "",
        "operationId": "findSubordinates",
        "parameters": [
          {
            "in": "query",
            "name": "managerId",
            "required": true,
            "type": "string"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{username}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by user name",
        "description": "",
        "operationId": "getUserByName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Updated user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Plan": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "evaluation": {
          "$ref": "#/definitions/Evaluation"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "enum": [
            "active",
            "toBeReviewed",
            "reviewed",
            "waiting"
          ]
        },
        "goals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Goal"
          }
        }
      }
    },
    "Evaluation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "rating": {
          "type": "string"
        }
      }
    },
    "Goal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "complexity": {
          "type": "string"
        },
        "priority": {
          "type": "string"
        },
        "progress": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "plans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Plan"
          }
        }
      }
    },
    "CreateUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}